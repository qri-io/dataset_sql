version: '2'
jobs:
  build:
    working_directory: /go/src/github.com/qri-io/dataset_sql
    docker:
      - image: circleci/cci-demo-go-primary:0.0.2
        environment:
          GOLANG_ENV: test
          PORT: 3000
          DEBUG: false
    steps:
      - checkout
      - run: 
          name: Make test results directory
          command: mkdir -p /tmp/test-reports/qri-io
      - run:
          name: Install dependencies
          command: go-wrapper download && go-wrapper install && go get -v github.com/jstemmer/go-junit-report github.com/sergi/go-diff/diffmatchpatch
      - run: 
          name: Run tests
          command: go test -v -race -coverprofile=coverage.txt -covermode=atomic | tee /tmp/test-reports/qri-io/original.txt ; test ${PIPESTATUS[0]} -eq 0
      - run: 
          name: Convert test output to junit-style xml
          command: cat /tmp/test-reports/qri-io/original.txt | go-junit-report > /tmp/test-reports/qri-io/junit.xml
      - store_test_results:
          path: /tmp/test-reports/qri-io/junit.xml
      - run:
          name: Publish coverage info to codecov.io
          command: bash <(curl -s https://codecov.io/bash)
      # - setup_remote_docker
      # - run:
      #     name: Install Docker client
      #     command: |
      #       if [ $CIRCLE_BRANCH = 'master' ]; then
      #         set -x
      #         VER="17.03.0-ce"
      #         curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
      #         tar -xz -C /tmp -f /tmp/docker-$VER.tgz
      #         mv /tmp/docker/* /usr/bin
      #       fi
      # - run:
      #     name: Publish to Docker Hub
      #     command: |
      #       if [ $CIRCLE_BRANCH = 'master' ]; then
      #         TAG=0.1.$CIRCLE_BUILD_NUM
      #         docker build -t qri-io/dataset_sql:latest -t qri-io/dataset_sql:$TAG .
      #         docker login -u $DOCKER_USER -p $DOCKER_PASS
      #         docker push qri-io/dataset_sql:$TAG
      #         docker push qri-io/dataset_sql:latest
      #       fi